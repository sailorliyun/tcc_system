#!/bin/csh
#　スクリプト名  ： QPTJG4UX
#　 機  能       ： 人事マスタファイル変換処理
#　 作成者       ： FIP
#
#-------------------------------------------------------------------------
#          修  正  履  歴
# 管理No              修正内容                    担当者      修正日付
#--------------------------------------------------------------------------

##################################
#           環境設定             #
##################################
set    SHELL_NAME   = $0                                 # シェル名
setenv JOB_ID         $SHELL_NAME:t                      # ジョブ名
setenv JOBNET_ID      'QPTGA1UX'                         # ジョブネット名
set    LOGFILE      = $USER_LOG_DIR/${JOB_ID}.log        # ログファイル名
set    LOGWRITE     = $EXE_DIR/QUAJ_MSGLOG.BAT           # ログ出力モジュール
setenv USERKEY        'QPTJG4UX'                         # ユーザキー
set    KINOU        = '人事マスタファイル変換処理'
set    QP_DATA_DIR  = $QV_DATA_DIR/qp                    #TMP FILE DIR
set    QP_HUL_DIR   = $FROMHOST1_DIR/qp/rcv              #TMP FILE DIR
set    MODULE       = 'SHELL'

$LOGWRITE "$MODULE" I "開始:$KINOU" "$USERKEY"           # 開始メッセージの出力

#########################################
# STEP-1 人事マスタファイルコピー       #
#########################################
set    STEPKINOU    = '社員貸付・人事マスタファイルコピー'
$LOGWRITE "$MODULE" I "開始:$STEPKINOU" "$USERKEY"       # 開始メッセージの出力
cp $QP_HUL_DIR/zinzihft.dat $QP_DATA_DIR/zinzihftnew.dat
set rc = $status                                         # リターンステータス待避
if ( $rc != 0 ) then                                     # リターンステータス判定
    set MSG = "失敗:$STEPKINOU RC=[$rc]"
    $LOGWRITE "$MODULE" E "$MSG" $USERKEY
    exit  1                                              # 異常終了
endif
$LOGWRITE "$MODULE" I "終了:$STEPKINOU" "$USERKEY"       # 終了メッセージの出力

#########################################
# STEP-2 人事マスタデータレイアウト変換 #
#########################################
set    MODULE       = 'COBOL'
set    STEPKINOU    = '社員貸付・人事マスタデータレイアウト変換'
$LOGWRITE "$MODULE" I "開始:$STEPKINOU" "$USERKEY"       # 開始メッセージの出力
set PROGRAM = $EXE_DIR/qpab_s000010.exe
if ( -x $PROGRAM ) then
    #  ファイル識別子の設定
    setenv INFILE   $QP_DATA_DIR/zinzihftnew.dat         # 人事マスタファイル
    setenv OTFILE   $QP_DATA_DIR/zinzihft.dat            # 人事マスタレイアウト変換ファイル
    #
    setenv NLS_LANG Japanese_Japan.JA16SJIS              # 文字コード体系をSJISにする
    $PROGRAM > &  $LOGFILE                               # プログラム起動
    set rc = $status                                     # リターンステータス待避
    setenv NLS_LANG Japanese_Japan.JA16EUC               # 文字コード体系をEUCに戻す
else
    $LOGWRITE "$MODULE" E "実行プログラム[$PROGRAM]が存在しない。" "$USERKEY"
    exit 1                                               # 異常終了
endif

if ( $rc != 0 ) then                                     # リターンステータス判定
    set MSG = "失敗:$STEPKINOU RC=[$rc]"
    $LOGWRITE "$MODULE" E "$MSG" $USERKEY
    exit  1                                              # 異常終了
endif
$LOGWRITE "$MODULE" I "終了:$STEPKINOU" "$USERKEY"       # 終了メッセージの出力

#########################################
# STEP-3 人事マスタデータソート         #
#########################################
set    STEPKINOU    = '社員貸付・人事マスタデータファイルソート'
$LOGWRITE "$MODULE" I "開始:$STEPKINOU" "$USERKEY"       # 開始メッセージの出力

#人事マスタソートファイルとソート用テンポラリ領域の作成
touch $QP_DATA_DIR/zinzim.sort_tmp                       # テンポラリ領域
touch $QP_DATA_DIR/zinzim.sort_wk                        # ワークファイル
rm    $QP_DATA_DIR/zinzim.sort_wk                        # ワークファイル

set PROGRAM = $EXE_DIR/qpab_s000100.exe
if ( -x $PROGRAM ) then
    #  ファイル識別子の設定
    setenv INFILE   $QP_DATA_DIR/zinzihft.dat            # 人事マスタレイアウト変換ファイル
    setenv OTFILE   $QP_DATA_DIR/zinzisort.dat           # ソートファイル
    setenv SORTWK   $QP_DATA_DIR/zinzisort.sort_wk       # テンポラリ領域
    #
    setenv NLS_LANG Japanese_Japan.JA16SJIS              # 文字コード体系をSJISにする
    $PROGRAM > &  $LOGFILE                               # プログラム起動
    set rc = $status                                     # リターンステータス待避
    setenv NLS_LANG Japanese_Japan.JA16EUC               # 文字コード体系をEUCに戻す
else
    $LOGWRITE "$MODULE" E "実行プログラム[$PROGRAM]が存在しない。" "$USERKEY"
    exit 1                                               # 異常終了
endif

if ( $rc != 0 ) then                                     # リターンステータス判定
    set MSG = "失敗:$STEPKINOU RC=[$rc]"
    $LOGWRITE "$MODULE" E "$MSG" $USERKEY
    exit  1                                              # 異常終了
endif
$LOGWRITE "$MODULE" I "終了:$STEPKINOU" "$USERKEY"       # 終了メッセージの出力

$LOGWRITE "$MODULE" I "終了:$KINOU" "$USERKEY"           # 終了メッセージの出力

exit 0                                                   # 正常終了

