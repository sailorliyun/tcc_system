      *8...........2.........3.........4.........5........6........7..
000200 IDENTIFICATION                  DIVISION.
       PROGRAM-ID.                     QPAB-S000600.
      ****************************************************************
      *   システムコード       :  Ｑ                                 *
      *   サブシステムコード   :  ＰＡ                               *
      *   モジュール           :  ホスト貸付データロード用           *
      *                        :  ファイル作成                       *
      *   作成者               :  ＦＩＰ                             *
      *   作成日               :  H.13.10.02                         *
      *   処理概要             :  ホスト転送ファイルについている     *
      *                           ヘッダーを取り除き、               *
      *                           ロード用ファイルを作成する         *
      *                                                              *
      *                             ※ヘッダーは、最初の項目以外     *
      *                             すべて「0」が入っている          *
      *                                                              *
      *--------------------------------------------------------------*
      *                  修  正  履  歴                              *
      *   管理NO            修正理由             担当者   修正日付   *
      *   TR0601-005   エラーログ対応(早朝)    NBC.Nomura 06.12.15   *
      *                                                              *
      ****************************************************************
       ENVIRONMENT                     DIVISION.
       CONFIGURATION                   SECTION.
       SOURCE-COMPUTER.                FACOM.
       OBJECT-COMPUTER.                FACOM.
       SPECIAL-NAMES.
           CONSOLE                     IS  DSP
           ENVIRONMENT-NAME            IS  ENVNM
           ENVIRONMENT-VALUE           IS  ENVVAL.
       INPUT-OUTPUT                    SECTION.
       FILE-CONTROL.
      *
      *##########################################################
      *#  ファイル定義                                          #
      *##########################################################
      *  入力ファイル
           SELECT  IN-FILE            ASSIGN  TO    INFILE
                   FILE STATUS        IS STATUS-IN-FILE.
      *  出力ファイル
           SELECT  OT-FILE            ASSIGN  TO    OTFILE
                   FILE STATUS        IS STATUS-OT-FILE.
      /*
       DATA                            DIVISION.
       FILE                            SECTION.
      *
      *##########################################################
      *#  ファイルのレコード定義                                #
      *##########################################################
      *
      *  入力ファイル
       FD  IN-FILE
           LABEL   RECORD              STANDARD.
       01  IN-REC.
           03  IN-TORIHIKIYMD          PIC  X(08).
           03  IN-TORIHIKIHMS          PIC  X(06).
           03  IN-SYAINCD              PIC  X(07).
           03  IN-HOSTSYORINO          PIC  X(01).
           03  IN-KAZOKUCD             PIC  X(01).
           03  IN-MEISAIFLG            PIC  X(01).
           03  IN-SYUBETU              PIC  X(02).
           03  IN-KINGAKU              PIC  X(09).
           03  IN-MARUYUU              PIC  X(01).
           03  IN-WS                   PIC  X(08).
           03  IN-DATAYMD              PIC  X(08).
           03  IN-KANRITEN             PIC  X(02).
           03  IN-FILLER               PIC  X(06).
      *  固定項目（制御コード用）
           03  IN-CR                   PIC  X(01).
      *
      *  出力ファイル（項目ごとに定義）
       FD  OT-FILE
           LABEL   RECORD              STANDARD.
       01  OT-REC.
           03  OT-TORIHIKIYMD          PIC  X(08).
           03  OT-TORIHIKIHMS          PIC  X(06).
           03  OT-SYAINCD              PIC  X(07).
           03  OT-HOSTSYORINO          PIC  X(01).
           03  OT-KAZOKUCD             PIC  X(01).
           03  OT-MEISAIFLG            PIC  X(01).
           03  OT-SYUBETU              PIC  X(02).
           03  OT-KINGAKU              PIC  X(09).
           03  OT-MARUYUU              PIC  X(01).
           03  OT-WS                   PIC  X(08).
           03  OT-DATAYMD              PIC  X(08).
           03  OT-KANRITEN             PIC  9(03).
           03  OT-FILLER               PIC  X(06).
      *  固定項目（制御コード用）
           03  OT-CR                   PIC  X(01).
      *
      *
      /
       WORKING-STORAGE                 SECTION.
      *
      *##########################################################
      *#  ワーク領域の定義                                      #
      *#                                                        #
      *##########################################################
      *
      *
      *##########################################################
      *    ＜  ファイル読込フラグ  ＞
      *##########################################################
       01  WK-ENDFLG                   PIC  X(01).
      *
      *
      *##########################################################
      *    ＜  プログラムスイッチ領域  ＞
      *##########################################################
      *
       01  SW-AREA.
           03  SW-ABEND                PIC  X(01)  VALUE "0".
      *
      *##########################################################
      *    ＜  ファイルスタータス領域  ＞
      *##########################################################
      *
       01  STATUS-AREA.
           03  STATUS-IN-FILE          PIC  X(02).
           03  STATUS-OT-FILE          PIC  X(02).
      *
      *##########################################################
      *    ＜  カウント領域  ＞
      *##########################################################
      *
       01  CNT-AREA.
      *    総データ出力件数
           03  CNT-OTREC             PIC  9(07)  COMP-3  VALUE ZERO.
      *    ファイル分割用カウンタ
           03  CNT-FILESPT           PIC  9(07)  COMP-3  VALUE ZERO.
      *    分割ファイルカウンタ
           03  CNT-OUTFILE           PIC  9(01)          VALUE ZERO.
      *
      *##########################################################
      *    ＜  メッセージ編集領域  ＞
      *##########################################################
      *
       01  DSP-MODULEID              PIC  X(12)  VALUE "QPAB-S000600".
      *
      *##########################################################
      *    ＝  処理開始  ＝
      *##########################################################
      *
       01  DSP-MSG1.
           03  FILLER                  PIC  X(08)  VALUE
               "START : ".
           03  MSG1-TIME               PIC  X(08).
      *
      *##########################################################
      *    ＝  処理終了  ＝
      *##########################################################
      *
       01  DSP-MSG2.
           03  FILLER                  PIC  X(08)  VALUE
               "END   : ".
           03  MSG2-TIME               PIC  X(08).
      *
      *##########################################################
      *    ＝  処理件数  ＝
      *##########################################################
      *
       01  DSP-MSG3.
           03  FILLER                  PIC  X(08)  VALUE
               "OUT   : ".
           03  MSG3-CNT1               PIC  ZZ,ZZZ,ZZ9.
      *
      *##########################################################
      *    ＝  ファイルへの書込みエラー  ＝
      *##########################################################
      *
       01  DSP-ERR1.
           03  FILLER                  PIC  X(19)  VALUE
               "FILE WRITE ERROR : ".
           03  ERR1-STATUS             PIC  X(02).
      *
      *##########################################################
      *    ＝  編集領域  ＝
      *##########################################################
      *
       01  ED-WORK.
      *          時刻の編集用
           03    WK-TIME               PIC  9(08).
           03    FILLER                REDEFINES   WK-TIME.
             05  WK-TIME-HH            PIC  9(02).
             05  WK-TIME-MM            PIC  9(02).
             05  WK-TIME-SS            PIC  9(02).
           03    WK-ED-TIME.
             05  WK-ED-TIME-HH         PIC  9(02).
             05  FILLER                PIC  X(01)  VALUE ":".
             05  WK-ED-TIME-MM         PIC  9(02).
             05  FILLER                PIC  X(01)  VALUE ":".
             05  WK-ED-TIME-SS         PIC  9(02).
      *
      ****************************************************************
      * ORACLE HOST変数
      ****************************************************************
      *
       01  WK-SQLERRML                 PIC S9(04)
                                       SIGN LEADING SEPARATE.
       01  WK-SQLERRML-X               PIC  X(05).
      *
      *    埋込みＳＱＬ宣言開始（Ｂ領域：１２桁目以降）
      *
           EXEC SQL INCLUDE SQLCA END-EXEC.
           EXEC SQL INCLUDE ORACA END-EXEC.
           EXEC ORACLE OPTION (ORACA=YES) END-EXEC.
      *
           EXEC SQL BEGIN DECLARE SECTION END-EXEC.
      *
      *
      *##########################################################
      *    システム日付取得エリア
      *##########################################################
      *
        01  HOST-TOROKU-DATE-TIME.
           03  HOST-TOROKU-DATE         PIC  X(08).
           03  HOST-TOROKU-TIME         PIC  X(06).
      *
      *##########################################################
      *    埋込みＳＱＬ宣言終了
      *##########################################################
      *
           EXEC SQL  END  DECLARE SECTION END-EXEC.
      *
      *##########################################################
      *    ＜  その他のワーク領域  ＞
      *##########################################################
      *
       01  LINK-CONNECT-AREA.
           03  LINK-SQLCODE            PIC S9(09)  COMPUTATIONAL.
           03  LINK-USERID             PIC  X(10).
           03  LINK-USERID-LEN         PIC  9(02).
           03  LINK-PASSWD             PIC  X(10).
           03  LINK-PASSWD-LEN         PIC  9(02).
           03  LINK-ORACLE             PIC  X(10).
           03  LINK-ORACLE-LEN         PIC  9(02).
      *
      *##########################################################
      *    コンソールログ出力サブ・リンクエリア
      *##########################################################
      *
       01  LINK-CONS-AREA.
           03  LINK-CONS-MODULEID      PIC  X(40).
           03  LINK-CONS-MSGKBN        PIC  X(01).
           03  LINK-CONS-MSG           PIC  X(1024).
           03  LINK-CONS-STATUS        PIC  9(02).
      *
      /
       PROCEDURE                       DIVISION.
      ****************************************************************
      *    (0.0)   プログラム  コントロール                          *
      ****************************************************************
       PROC-SECT                       SECTION.
       PROC-START.
      *
      *＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
      *＊　初期処理  [1.0] 　　　　　　　　　　　　　　　　　　　　　＊
      *＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
      *
           PERFORM INIT-PROC.
      *
      *＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
      *＊　主処理    [2.0] 　　　　　　　　　　　　　　　　　　　　　＊
      *＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
      *
           PERFORM MAIN-PROC.
      *
      *＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
      *＊　終了処理  [3.0] 　　　　　　　　　　　　　　　　　　　　　＊
      *＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
      *
           PERFORM FINAL-PROC.
      *
       PROC-EXIT.
           EXIT    PROGRAM.
      /***************************************************************
      *    [1.0]   初期処理                                          *
      ****************************************************************
       INIT-PROC                       SECTION.
      *##########################################################
      *#　(1.1) 初期化が必要なワーク領域の初期化を行う          #
      *##########################################################
      *
           MOVE    DSP-MODULEID        TO      LINK-CONS-MODULEID.
      *2001/10/05 出力カウント追加
           MOVE    ZERO                TO      CNT-OTREC.
      *
      *##########################################################
      *    (1.2)  オラクルコネクト処理
      *##########################################################
      *
           CALL    "QTAB-CONNECT"      USING   LINK-CONNECT-AREA.
           IF      LINK-SQLCODE        NOT =   ZERO
      *            処理開始メッセージ出力
                   ACCEPT  WK-TIME     FROM    TIME
                   MOVE    WK-TIME-HH  TO      WK-ED-TIME-HH
                   MOVE    WK-TIME-MM  TO      WK-ED-TIME-MM
                   MOVE    WK-TIME-SS  TO      WK-ED-TIME-SS
                   MOVE    WK-ED-TIME  TO      MSG1-TIME
                   MOVE    "I"         TO      LINK-CONS-MSGKBN
                   MOVE    DSP-MSG1    TO      LINK-CONS-MSG
      *            コンソールログ出力処理
                   PERFORM CONS-PROC
      *            処理終了メッセージ出力
                   ACCEPT  WK-TIME     FROM    TIME
                   MOVE    WK-TIME-HH  TO      WK-ED-TIME-HH
                   MOVE    WK-TIME-MM  TO      WK-ED-TIME-MM
                   MOVE    WK-TIME-SS  TO      WK-ED-TIME-SS
                   MOVE    WK-ED-TIME  TO      MSG2-TIME
                   MOVE    "I"         TO      LINK-CONS-MSGKBN
                   MOVE    DSP-MSG2    TO      LINK-CONS-MSG
      *            コンソールログ出力処理
                   PERFORM CONS-PROC
                   MOVE    099         TO      PROGRAM-STATUS
                   EXIT    PROGRAM
           END-IF.
      *
      *
      *
      *
      *##########################################################
      *    (1.3)  処理開始メッセージ出力
      *##########################################################
      *
           ACCEPT  WK-TIME             FROM    TIME.
           MOVE    WK-TIME-HH          TO      WK-ED-TIME-HH.
           MOVE    WK-TIME-MM          TO      WK-ED-TIME-MM.
           MOVE    WK-TIME-SS          TO      WK-ED-TIME-SS.
           MOVE    WK-ED-TIME          TO      MSG1-TIME.
           MOVE    "I"                 TO      LINK-CONS-MSGKBN.
           MOVE    DSP-MSG1            TO      LINK-CONS-MSG.
      *    コンソールログ出力処理
           PERFORM CONS-PROC.
      *
      *
      *
      *##########################################################
      *#    (1.4)  ファイルのオープン                           #
      *##########################################################
      *
      *    入力ファイルＯＰＥＮ
           OPEN   INPUT                IN-FILE.
           IF  ( STATUS-IN-FILE NOT  =    ZERO )
               MOVE    "01"             TO    DSP-ERR1(14:2)
               MOVE    STATUS-IN-FILE   TO    ERR1-STATUS
               MOVE    099              TO    PROGRAM-STATUS
               EXIT    PROGRAM
           END-IF.
      *
      *    出力ファイルＯＰＥＮ
           OPEN   OUTPUT                OT-FILE.
           IF  ( STATUS-OT-FILE NOT  =    ZERO )
               MOVE    "01"             TO    DSP-ERR1(14:2)
               MOVE    STATUS-OT-FILE   TO    ERR1-STATUS
               MOVE    099              TO    PROGRAM-STATUS
               EXIT    PROGRAM
           END-IF.
      *
      *
      *##########################################################
      *#    (1.5)  初期値設定                                   #
      *##########################################################
      *
           MOVE  "0"                    TO  WK-ENDFLG.
      *
       INIT-PROC-EXIT.
           EXIT.
      *
      *
      *
      *
      *
      /***************************************************************
      *    [2.0]   主処理                                            *
      ****************************************************************
       MAIN-PROC                       SECTION.
      *
      *    最初のレコード
      *    入力ファイル読込
           PERFORM  READ-PROC.
      *
      *    ２番目以降はデータがある間処理繰り返し
           PERFORM  UNTIL
                    WK-ENDFLG = "1"
      *
      *         データ編集処理
                PERFORM  DATA-EDIT
      *
      *         入力ファイル読込
                PERFORM  READ-PROC
      *
           END-PERFORM.
      *
      *
       MAIN-PROC-EXIT.
           EXIT.
      *
      *
      ****************************************************************
      *    (2.1)   データ読込処理                                    *
      ****************************************************************
       READ-PROC                       SECTION.
      *
      *    全データを読み終わったらフラグを立てる
           READ  IN-FILE      AT    END
               MOVE  "1"      TO    WK-ENDFLG.
      * TR0601-005 ADD START     2006.12.15 -->
           IF ( STATUS-IN-FILE    NOT =    ZERO ) AND
              ( WK-ENDFLG             =    "0"  )
           THEN
               MOVE    STATUS-IN-FILE     TO    ERR1-STATUS
               MOVE    "S"                TO    LINK-CONS-MSGKBN
               MOVE    DSP-ERR1           TO    LINK-CONS-MSG
               MOVE    "READ"             TO    LINK-CONS-MSG(6:5)
      *            コンソールログ出力処理
               PERFORM CONS-PROC
               MOVE    099                TO    PROGRAM-STATUS
               EXIT    PROGRAM
           END-IF.
      * TR0601-005 ADD END       2006.12.15 <--
      *
       READ-PROC-EXIT.
           EXIT.
      *
      *
      ****************************************************************
      *    (2.2)   データ抽出処理                                    *
      *              ヘッダー部分は読み飛ばす                        *
      *                ヘッダーは、取引発生年月日以外全て「0」が     *
      *                入っているので、社員番号＝「0000000」であれば *
      *                そのレコードは読み飛ばし                      *
      ****************************************************************
       DATA-EDIT                      SECTION.
      *
      *    社員コードが0000000でなければ編集処理へ
           IF  IN-SYAINCD   =  "0000000"
               CONTINUE
           ELSE
               PERFORM  DATA-WRITE
           END-IF.
      *
      *
       DATA-EDIT-EXIT.
           EXIT.
      *
      /***************************************************************
      *    (2.3)   データ編集及び書込み処理                          *
      ****************************************************************
       DATA-WRITE                      SECTION.
      *
      *    取引発生年月日
           MOVE  IN-TORIHIKIYMD        TO  OT-TORIHIKIYMD.
      *
      *    取引発生時刻
           MOVE  IN-TORIHIKIHMS        TO  OT-TORIHIKIHMS.
      *
      *    社員番号
           MOVE  IN-SYAINCD            TO  OT-SYAINCD.
      *
      *    ホスト処理連番
           MOVE  IN-HOSTSYORINO        TO  OT-HOSTSYORINO.
      *
      *    家族コード
           MOVE  IN-KAZOKUCD           TO  OT-KAZOKUCD.
      *
      *    明細出力フラグ
           MOVE  IN-MEISAIFLG          TO  OT-MEISAIFLG.
      *
      *    種別
           MOVE  IN-SYUBETU            TO  OT-SYUBETU.
      *
      *    金額
           MOVE  IN-KINGAKU            TO  OT-KINGAKU.
      *
      *    マル優内外フラグ
           MOVE  IN-MARUYUU            TO  OT-MARUYUU.
      *
      *    ＷＳ名
           MOVE  IN-WS                 TO  OT-WS.
      *
      *    データ入力日付
           MOVE  IN-DATAYMD            TO  OT-DATAYMD.
      *
      *    管理店
           MOVE  IN-KANRITEN           TO  OT-KANRITEN.
      *
      *    ＦＩＬＬＥＲ
           MOVE  IN-FILLER             TO  OT-FILLER.
      *
      *    改行コード
           MOVE    X"0A"               TO  OT-CR.
      *
      *
      *
      *2001/10/05 出力カウント追加
           ADD  1 TO CNT-OTREC.
      *    出力ファイルに当該データを書き込む
           WRITE   OT-REC.
      *
      *
      *##########################################################
      *    書込みエラー判定
      *##########################################################
      *
           IF      STATUS-OT-FILE      NOT =   ZERO
                   MOVE    STATUS-OT-FILE      TO      ERR1-STATUS
                   MOVE    "S"         TO      LINK-CONS-MSGKBN
                   MOVE    DSP-ERR1    TO      LINK-CONS-MSG
      *            コンソールログ出力処理
                   PERFORM CONS-PROC
                   MOVE    "1"         TO      SW-ABEND
           END-IF.
      *
      *
      *
       DATA-WRITE-EXIT.
           EXIT.
      *
      /***************************************************************
      *    (3.0)   終了処理                                          *
      ****************************************************************
       FINAL-PROC                      SECTION.
      *
      *##########################################################
      *    ファイルＣＬＯＳＥ
      *##########################################################
      *
           CLOSE   IN-FILE.
           CLOSE   OT-FILE.
      *
      *
      *
      *
      *##########################################################
      *    処理件数メッセージ出力
      *##########################################################
      *
           MOVE    CNT-OTREC           TO      MSG3-CNT1.
           MOVE    "I"                 TO      LINK-CONS-MSGKBN.
           MOVE    DSP-MSG3            TO      LINK-CONS-MSG.
      *    コンソールログ出力処理
           PERFORM CONS-PROC.
      *
      *
      *
      *
      *##########################################################
      *    処理終了メッセージ出力
      *##########################################################
      *
           ACCEPT  WK-TIME             FROM    TIME.
           MOVE    WK-TIME-HH          TO      WK-ED-TIME-HH.
           MOVE    WK-TIME-MM          TO      WK-ED-TIME-MM.
           MOVE    WK-TIME-SS          TO      WK-ED-TIME-SS.
           MOVE    WK-ED-TIME          TO      MSG2-TIME.
           MOVE    "I"                 TO      LINK-CONS-MSGKBN.
           MOVE    DSP-MSG2            TO      LINK-CONS-MSG.
      *    コンソールログ出力処理
           PERFORM CONS-PROC.
      *
      *
      *
      *
      *##########################################################
      *    処理終了時のプログラムステータスの設定
      *##########################################################
      *
           IF      SW-ABEND            =       "0"
                   MOVE    000         TO      PROGRAM-STATUS
           ELSE
                   MOVE    050         TO      PROGRAM-STATUS
           END-IF.
      *
      *
      *
      *
       FINAL-PROC-EXIT.
           EXIT.
      /***************************************************************
      *    (C.0)   コンソールログ出力処理
      ****************************************************************
       CONS-PROC                       SECTION.
      *
      *##########################################################
      *    コンソールログ出力サブ
      *##########################################################
      *
           CALL    "QTAB-CONSLOG"      USING   LINK-CONS-AREA.
           IF      LINK-CONS-STATUS    =       ZERO
      *
      *            データベーストランザクションコミット
                   EXEC SQL COMMIT WORK END-EXEC
                   MOVE    000         TO      PROGRAM-STATUS
           ELSE
                   MOVE    099         TO      PROGRAM-STATUS
                   EXIT    PROGRAM
           END-IF.
      *
       CONS-PROC-EXIT.
           EXIT.
