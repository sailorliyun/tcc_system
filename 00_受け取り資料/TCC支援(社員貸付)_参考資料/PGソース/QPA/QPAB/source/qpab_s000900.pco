      *8...........2.........3.........4.........5........6........7..     
000100 IDENTIFICATION              DIVISION.
       PROGRAM-ID.                 QPAB-S000900.
      ****************************************************************
      *   システムコード       :  Ｑ                                 *
      *   サブシステムコード   :  ＰＡ                               *
      *   モジュール           :  残高更新データファイル作成         *
      *   作成者               :  ＦＩＰ                             *
      *   作成日               :  H20.5.1                            *
      *   処理概要             :  ホストデータの数値チェック変換     *
      *     人事マスタ・社員基本レコードを更新するための             *
      *     残高更新情報を各テーブルより作成する。                   *
      *                                                              *
      *--------------------------------------------------------------*
      *                  修  正  履  歴                              *
      *   管理NO   修正理由                      担当者   修正日付   *
      *                                                              *
      ****************************************************************
       ENVIRONMENT                 DIVISION.
       CONFIGURATION               SECTION.
       SOURCE-COMPUTER.            FACOM.
       OBJECT-COMPUTER.            FACOM.
       SPECIAL-NAMES.
           CONSOLE                 IS  DSP
           ENVIRONMENT-NAME        IS  ENVNM
           ENVIRONMENT-VALUE       IS  ENVVAL.
       INPUT-OUTPUT                SECTION.
       FILE-CONTROL.
           SELECT  OT-FILE         ASSIGN  TO  OTFILE
                   FILE STATUS     IS STATUS-OT-FILE.            
      /*
       DATA                        DIVISION.
       FILE                        SECTION. 
      *
      *##########################################################
      *    残高更新ファイル
      *##########################################################
      *    残高更新ファイル
       FD  OT-FILE  
           LABEL   RECORD          STANDARD.
       01  OT-REC.
           03  OT-SYAINCD.
               05  OT-SYAINCD1        PIC  X(01).
               05  OT-SYAINCD2        PIC  X(07).
           03  OT-RIRITU.
               05  OT-RIRITU1         PIC  9(02).
               05  OT-RIRITU2         PIC  9(02).
           03  OT-ZANDAKA-G.
               05  OT-ZANDAKA-S       PIC  X(01).
               05  OT-ZANDAKA         PIC  9(07).
           03  OT-MAITUKIHENSAI-G     PIC  9(07).
           03  OT-SYOYOHENSAI-G       PIC  9(07).
           03  OT-GENDOGAKU-G         PIC  9(07).
           03  OT-FILLER              PIC  X(39).
           03  CR                     PIC  X(01).
      / 
      ****************************************************************
      *    編集項目定義                                              #
      ****************************************************************
       WORKING-STORAGE                 SECTION.
      *
      *##########################################################
      *    ＜  編集領域  ＞
      *##########################################################
       01  WK-AREA.
      *入金起算日ワーク
           03  WK-NKISANBI.
               05  WK-NKISAN-NEN     PIC  9(04).
               05  WK-NKISAN-TUKI    PIC  9(02).
               05  WK-NKISAN-HI      PIC  9(02).
      *抽出起算日ワーク
           03  WK-CKISANBI.
               05  WK-CKISAN-NEN     PIC  9(04).
               05  WK-CKISAN-TUKI    PIC  9(02).
               05  WK-CKISAN-HI      PIC  9(02).
      *利率ワーク
           03  WK-RIRITU-G.
               05  WK-RIRITU         PIC  9(02)V9(02).
      *残高ワーク
           03  WK-ZANDAKA            PIC S9(10) COMP-3  VALUE 0.
      *
      *##########################################################
      *    ＜  テーブル判断領域  ＞
      *##########################################################
      *
       01  WK-TBL.
           03  WK-TBL-NAME           PIC  X(04).
      *
      *##########################################################
      *    ＜  プログラムスイッチ領域  ＞
      *##########################################################
      *
       01  SW-AREA.
           03  SW-ABEND              PIC  X(01)  VALUE "0".
           03  SW-OWARI              PIC  X(01)  VALUE "0".
      *
      *##########################################################
      *    ＜  ファイルスタータス領域  ＞
      *##########################################################
      *
       01  STATUS-AREA.
           03  STATUS-OT-FILE         PIC  X(02).
      *
      *##########################################################
      *    ＜  カウント領域  ＞
      *##########################################################
      *
       01  CNT-AREA.
      *    総データ入力件数
           03  CNT-INREC              PIC  9(07)  COMP-3  VALUE ZERO.
      *    総データ出力件数
           03  CNT-OTREC              PIC  9(07)  COMP-3  VALUE ZERO.
      *
      *##########################################################
      *    ＜  メッセージ編集領域  ＞
      *##########################################################
      *
       01  DSP-MODULEID               PIC  X(12)  VALUE "QPAB-S000900".
      *
      *##########################################################
      *    ＝  処理開始  ＝
      *##########################################################
      *
       01  DSP-MSG1.
           03  FILLER                PIC  X(08)  VALUE
               "START : ".
           03  MSG1-TIME             PIC  X(08).
      *
      *##########################################################
      *    ＝  処理終了  ＝
      *##########################################################
      *
       01  DSP-MSG2.
           03  FILLER                PIC  X(08)  VALUE
               "END   : ".
           03  MSG2-TIME             PIC  X(08).
      *
      *##########################################################
      *    ＝  処理件数  ＝
      *##########################################################
      *
       01  DSP-MSG3.
           03  FILLER                PIC  X(18)  VALUE
               "IN-SOU-KENSUU : = ".
           03  MSG3-CNT1             PIC  ZZ,ZZZ,ZZ9.
           03  FILLER                PIC  X(01)  VALUE SPACE.
           03  FILLER                PIC  X(22)  VALUE
               "IN-TAISYOU-KENSUU : = ".
           03  MSG3-CNT2             PIC  ZZ,ZZZ,ZZ9.
           03  FILLER                PIC  X(01)  VALUE SPACE.
           03  FILLER                PIC  X(12)  VALUE
               "OUT-DATA: = ".
           03  MSG3-CNT3             PIC  ZZ,ZZZ,ZZ9.
      *
      *##########################################################
      *    ＝  ファイルへのオープンエラー  ＝
      *##########################################################
      *
       01  DSP-ERR1.
           03  FILLER                PIC  X(19)  VALUE
               "FILE OPEN  ERROR : ".
           03  ERR1-STATUS           PIC  X(02).
      *
      *##########################################################
      *    ＝  ファイルへの書込みエラー  ＝
      *##########################################################
      *
       01  DSP-ERR2.
           03  FILLER                PIC  X(19)  VALUE
               "FILE WRITE ERROR : ".
           03  ERR2-STATUS           PIC  X(02).
      *
      *##########################################################
      *    ＝  処理区分取得エラー  ＝
      *##########################################################
      *
       01  DSP-ERR3.
           03  FILLER                PIC  X(22)  VALUE
               "SYORI-KBN GET ERROR : ".
      *
      *##########################################################
      *    ＝  オラクル接続エラー  ＝
      *##########################################################
      *
       01  DSP-ERR4.
           03  DSP-ERR4-MSG          PIC  X(05)  VALUE SPACE.
           03  FILLER                PIC  X(25)  VALUE
               " :ORACLE CONNECT ERROR : ".
           03  ERR4-TIME             PIC  X(08).
      *
      *##########################################################
      *    ＝  編集領域  ＝
      *##########################################################
      *
       01  ED-WORK.
      *          時刻の編集用
           03    WK-TIME             PIC  9(08).
           03    FILLER              REDEFINES   WK-TIME.
             05  WK-TIME-HH          PIC  9(02).
             05  WK-TIME-MM          PIC  9(02).
             05  WK-TIME-SS          PIC  9(02).
           03    WK-ED-TIME.
             05  WK-ED-TIME-HH       PIC  9(02).
             05  FILLER              PIC  X(01)  VALUE ":".
             05  WK-ED-TIME-MM       PIC  9(02).
             05  FILLER              PIC  X(01)  VALUE ":".
             05  WK-ED-TIME-SS       PIC  9(02).
      *
      ****************************************************************
      * ORACLE HOST変数
      ****************************************************************
      *
       01  WK-SQLERRML               PIC S9(04)
                                     SIGN LEADING SEPARATE.
       01  WK-SQLERRML-X             PIC  X(05).
      *
      *    埋込みＳＱＬ宣言開始（Ｂ領域：１２桁目以降）
      *    EXEC SQL INCLUDE SQLCA END-EXEC.
      *    EXEC SQL INCLUDE ORACA END-EXEC.
      *    EXEC ORACLE OPTION (ORACA=YES) END-EXEC.
      *
      *
      ****************************************************************
      * ORACLE HOST変数
      ****************************************************************
           EXEC SQL BEGIN DECLARE SECTION END-EXEC.
      *
       01  HOST-WORK.
           03  SQLSTATE              PIC  X(05).
      *
       01  HOST-SYORIKBN.
           03  SYORIKBN              PIC  X(01).
      *
       01  QPA1-DATA.
           03  QPA1-COUNT            PIC  9(07).
      *
       01  QSA5-DATA.
           03  QSA5-NEN              PIC  9(04).
           03  QSA5-TUKI             PIC  9(02).
           03  QSA5-SYORIBI          PIC  X(08).
      *
       01  QPA7-DATA.
           03  QPA7-RIRITU           PIC  9(04)V9(02).
           03  QPA7-SYORIBI          PIC  X(08).
      *
       01  QPA-DATA.
           03  QPA-PRMSYAINCD.
               05  QPA-PRMSYAINCD1   PIC  X(01).
               05  QPA-PRMSYAINCD2   PIC  X(07).
           03  QPA-KYUYOHENSAI       PIC S9(10)  COMP-3.
           03  QPA-SYOYOHENSAI       PIC S9(10)  COMP-3.
           03  QPA-GENDOGAKU         PIC S9(10)  COMP-3.
           03  QPA-ZANDAKA           PIC S9(10)  COMP-3.
           03  QPA-TAISYOKUBI        PIC  X(08).
      *
       01  QPA6-DATA.
           03  QPA6-SYAINCD          PIC  X(07).
           03  QPA6-TORIHIKIYMD      PIC  X(08).
           03  QPA6-KINGAKU          PIC S9(10)  COMP-3.
      *
       01  QPA5-DATA.
           03  QPA5-SYAINCD1         PIC  X(01).
           03  QPA5-SYAINCD2         PIC  X(07).
           03  QPA5-NYUKINYMD        PIC  X(08).
           03  QPA5-KINGAKU          PIC S9(10)  COMP-3.
      *
       01  QPA4-DATA.
           03  QPA4-SYAINCD1         PIC  X(01).
           03  QPA4-SYAINCD2         PIC  X(07).
           03  QPA4-KOJOYMD          PIC  X(08).
           03  QPA4-KOJOYMD2         PIC  X(08).
           03  QPA4-KOJOGAKU         PIC S9(10)  COMP-3.
      *
      *
      ****************************************************************
      *    埋込みＳＱＬ宣言終了
      ****************************************************************
           EXEC SQL  END  DECLARE SECTION END-EXEC.
      *
           EXEC SQL INCLUDE SQLCA END-EXEC.
           EXEC SQL INCLUDE ORACA END-EXEC.
      *
      *##########################################################
      *    ＜  その他のワーク領域  ＞
      *##########################################################
      *
       01  LINK-CONNECT-AREA.
           03  LINK-SQLCODE          PIC S9(09)  COMPUTATIONAL.
           03  LINK-USERID           PIC  X(10).
           03  LINK-USERID-LEN       PIC  9(02).
           03  LINK-PASSWD           PIC  X(10).
           03  LINK-PASSWD-LEN       PIC  9(02).
           03  LINK-ORACLE           PIC  X(10).
           03  LINK-ORACLE-LEN       PIC  9(02).
      *
      *
      *##########################################################
      *    コンソールログ出力サブ・リンクエリア
      *##########################################################
      *
       01  LINK-CONS-AREA.
           03  LINK-CONS-MODULEID    PIC  X(40).
           03  LINK-CONS-MSGKBN      PIC  X(01).
           03  LINK-CONS-MSG         PIC  X(1024).
           03  LINK-CONS-STATUS      PIC  9(02).
      *
       PROCEDURE                       DIVISION.
      ****************************************************************
      *    (0.0)   プログラム  コントロール                          *
      ****************************************************************
       PROC-SECT                       SECTION.
       PROC-START.
      *
      *＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
      *＊　初期処理  [1.0] 　　　　　　　　　　　　　　　　　　　　＊
      *＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
      *
           PERFORM INIT-PROC.
      *
      *＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
      *＊　主処理    [2.0] 　　　　　　　　　　　　　　　　　　　　＊
      *＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
      *
           IF  SW-ABEND = "1" GO TO PROC-EXIT.
           PERFORM MAIN-PROC.
      *
      *＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
      *＊　終了処理  [3.0] 　　　　　　　　　　　　　　　　　　　　＊
      *＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
      *
           PERFORM FINAL-PROC.
      *
       PROC-EXIT.
           EXIT    PROGRAM.
      *
      *
      /***************************************************************
      *    (1.0)   初期処理                                          *
      ****************************************************************
       INIT-PROC                       SECTION.
      *
      *    オラクル使用時の定義
      *    ＳＱＬワーニング
           EXEC   SQL
               WHENEVER    SQLWARNING  DO  PERFORM  ORA-ERR-PROC
           END-EXEC.
      *
      *    ＳＱＬエラー
           EXEC   SQL
               WHENEVER    SQLERROR    DO  PERFORM  ORA-ERR-PROC
           END-EXEC.
      *
      *    該当データ無し
           EXEC   SQL
               WHENEVER NOT FOUND CONTINUE
           END-EXEC.
      *
      *    テーブル判断領域のクリア
           MOVE    SPACE            TO    WK-TBL-NAME.
      *
      *    モジュールＩＤの編集
           MOVE    DSP-MODULEID        TO      LINK-CONS-MODULEID.
      *
      *    オラクルコネクト処理
      *
           CALL    "QTAB-CONNECT"      USING   LINK-CONNECT-AREA.
           IF      LINK-SQLCODE        NOT =   ZERO
      *            処理開始メッセージ出力
                   ACCEPT  WK-TIME     FROM    TIME
                   MOVE    WK-TIME-HH  TO      WK-ED-TIME-HH
                   MOVE    WK-TIME-MM  TO      WK-ED-TIME-MM
                   MOVE    WK-TIME-SS  TO      WK-ED-TIME-SS
                   MOVE    WK-ED-TIME  TO      ERR4-TIME
                   MOVE    "E"         TO      LINK-CONS-MSGKBN
                   MOVE    "START"     TO      DSP-ERR4-MSG
                   MOVE    DSP-ERR4    TO      LINK-CONS-MSG
      *            コンソールログ出力処理
                   PERFORM CONS-PROC
      *            処理終了メッセージ出力
                   ACCEPT  WK-TIME     FROM    TIME
                   MOVE    WK-TIME-HH  TO      WK-ED-TIME-HH
                   MOVE    WK-TIME-MM  TO      WK-ED-TIME-MM
                   MOVE    WK-TIME-SS  TO      WK-ED-TIME-SS
                   MOVE    WK-ED-TIME  TO      ERR4-TIME
                   MOVE    "E"         TO      LINK-CONS-MSGKBN
                   MOVE    "END  "     TO      DSP-ERR4-MSG
                   MOVE    DSP-ERR4    TO      LINK-CONS-MSG
      *            コンソールログ出力処理
                   PERFORM CONS-PROC
                   MOVE    099         TO      PROGRAM-STATUS
                   EXIT    PROGRAM
           END-IF.
      *
      *    処理開始メッセージ出力
           ACCEPT  WK-TIME             FROM    TIME.
           MOVE    WK-TIME-HH          TO      WK-ED-TIME-HH.
           MOVE    WK-TIME-MM          TO      WK-ED-TIME-MM.
           MOVE    WK-TIME-SS          TO      WK-ED-TIME-SS.
           MOVE    WK-ED-TIME          TO      MSG1-TIME.
           MOVE    "I"                 TO      LINK-CONS-MSGKBN.
           MOVE    DSP-MSG1            TO      LINK-CONS-MSG.
      *
      *    コンソールログ出力処理
           PERFORM CONS-PROC.
      *
      *    出力ファイルオープン
           OPEN   OUTPUT                OT-FILE.
           IF  ( STATUS-OT-FILE NOT  =    ZERO )
               MOVE    "01"             TO    DSP-ERR1(14:2)
               MOVE    STATUS-OT-FILE   TO    ERR1-STATUS
               MOVE    "E"              TO    LINK-CONS-MSGKBN
               MOVE    DSP-ERR1         TO    LINK-CONS-MSG
      *        コンソールログ出力処理
               PERFORM CONS-PROC
               MOVE    099              TO    PROGRAM-STATUS
               EXIT    PROGRAM
           END-IF.
      *
      *    小口融資台帳テーブル件数取得処理
           PERFORM QTA1-COUNT-PROC.
           IF  ( SW-ABEND   =    "1" )
               MOVE    099         TO      PROGRAM-STATUS
               EXIT    PROGRAM
           END-IF.
      *
      *    日付管理テーブル取得処理
           PERFORM QSA5-GET-PROC.
      *
      *    利率取得処理
           PERFORM QPA7-GET-PROC.
      *
      *
       INIT-PROC-EXIT.
           EXIT.
      /***************************************************************
      *    (1.1)     小口融資台帳テーブル件数取得処理                *
      ****************************************************************
       QTA1-COUNT-PROC               SECTION.
      *
      *    テーブル判断領域設定
           MOVE    "QPA1"            TO    WK-TBL-NAME.
      *
      *    小口融資台帳テーブル件数をカウントする
           EXEC SQL
                SELECT
                  COUNT(*)
               INTO  :QPA1-COUNT
                FROM QPA1_KGCDAICYOT
           END-EXEC.
      *
           IF  ( SQLCODE NOT = ZERO )
               PERFORM ORA-INV-PROC
           END-IF.
      *
      *
       QTA1-COUNT-PROC-EXIT.
           EXIT.
      *
      *
      /***************************************************************
      *    (1.2)     日付管理テーブル取得処理                        *
      ****************************************************************
       QSA5-GET-PROC                 SECTION.
      *
      *    テーブル判断領域設定
           MOVE    "QSA5"            TO    WK-TBL-NAME.
      *
      *    日付管理ＴＢＬより処理月を取得し、起算日を算出する
      *    日付管理ＴＢＬより処理年月日＋１日を取得する
      * 
           EXEC SQL
               SELECT
                 TO_NUMBER(TO_CHAR(QSA5_SYORIYMD, 'YYYY')) 
                ,TO_NUMBER(TO_CHAR(QSA5_SYORIYMD, 'MM')) 
                ,TO_CHAR(QSA5_SYORIYMD + 1, 'YYYYMMDD')
              INTO  :QSA5-NEN
                   ,:QSA5-TUKI
                   ,:QSA5-SYORIBI
               FROM QSA5_DATECTRLT
               WHERE QSA5_PRMSIKIBETUKBN = 'S'
           END-EXEC.
      *
      *
           IF  ( SQLCODE NOT = ZERO )
               PERFORM ORA-INV-PROC
               GO TO   QSA5-GET-PROC-EXIT
           END-IF.
      *
      *
      *    外部パラメタから処理区分を取得する
           DISPLAY "GKKBN"               UPON  ENVNM.
           ACCEPT  SYORIKBN              FROM  ENVVAL.
      *
           IF    SYORIKBN  =   "1" OR
                 SYORIKBN  =   "2"
               CONTINUE
           ELSE
               MOVE    "E"         TO      LINK-CONS-MSGKBN
               MOVE    DSP-ERR3    TO      LINK-CONS-MSG
      *         コンソールログ出力処理
               PERFORM CONS-PROC
               MOVE    "1"         TO      SW-ABEND
               GO TO   QSA5-GET-PROC-EXIT
           END-IF.
      *
      *    入金起算日を算出する
           IF    SYORIKBN  =   "1"
               MOVE    QSA5-NEN     TO    WK-NKISAN-NEN
               MOVE    QSA5-TUKI    TO    WK-NKISAN-TUKI
           ELSE
               IF    QSA5-TUKI      =  12
                     MOVE   QSA5-NEN     TO    WK-NKISAN-NEN
                     ADD    1            TO    WK-NKISAN-NEN
                     MOVE   1            TO    WK-NKISAN-TUKI
               ELSE
                     MOVE   QSA5-NEN     TO    WK-NKISAN-NEN
                     MOVE   QSA5-TUKI    TO    WK-NKISAN-TUKI
                     ADD    1            TO    WK-NKISAN-TUKI
           END-IF.
      *
           MOVE   1             TO    WK-NKISAN-HI
      *
      *    抽出起算日を算出する
      *    日次(1)の場合は処理前月26日から当月25日までを抽出する。
      *    月次(2)の場合は処理月26日から翌月25日までを抽出する。
      * 
           IF    SYORIKBN  =   "1"
               IF    QSA5-TUKI      =  1
                     MOVE   QSA5-NEN     TO    WK-CKISAN-NEN
                     ADD    -1           TO    WK-CKISAN-NEN
                     MOVE   12           TO    WK-CKISAN-TUKI
               ELSE
                     MOVE   QSA5-NEN     TO    WK-CKISAN-NEN
                     MOVE   QSA5-TUKI    TO    WK-CKISAN-TUKI
                     ADD    -1           TO    WK-CKISAN-TUKI
           ELSE
               MOVE    QSA5-NEN     TO    WK-CKISAN-NEN
               MOVE    QSA5-TUKI    TO    WK-CKISAN-TUKI
           END-IF.
      *
           MOVE   26            TO    WK-CKISAN-HI.
      *
       QSA5-GET-PROC-EXIT.
           EXIT.
      *
      *
      /***************************************************************
      *    (1.3)     利率取得処理                                    *
      ****************************************************************
       QPA7-GET-PROC                 SECTION.
      *
      *    テーブル判断領域設定
           MOVE    "QPA7"            TO    WK-TBL-NAME.
      *
      *    キー項目設定
           MOVE    QSA5-SYORIBI      TO    QPA7-SYORIBI.
      *
      *    初回ワーク利率のクリア
           MOVE    ZERO              TO    QPA7-RIRITU.
      *
      *    カーソル宣言を行う
      *
           EXEC SQL DECLARE CUR_QPA7 CURSOR FOR
            SELECT
                  QPA7_RIRITU
            FROM  QPA7_KGCRIRITUT
            WHERE TO_CHAR(QPA7_PRMHENKOYMD,'YYYYMMDD')  <= 
               TO_CHAR(TO_DATE(:QPA7-SYORIBI,'YYYYMMDD'),'YYYYMMDD')
            ORDER BY QPA7_PRMHENKOYMD DESC
           END-EXEC.
      *
      *    カーソルＯＰＥＮ
           EXEC SQL OPEN CUR_QPA7 END-EXEC.
      *
      *    １件のみフェッチ
           EXEC SQL
               FETCH CUR_QPA7
               INTO :QPA7-RIRITU
           END-EXEC.
      *
      *        利率をワーク領域へ退避
           MOVE  QPA7-RIRITU       TO    WK-RIRITU.
      *
      *    カーソルＣＬＯＳＥ
           EXEC SQL CLOSE CUR_QPA7 END-EXEC.
      *
      *    データが１件もない場合（利率がゼロ）はエラー
           IF  WK-RIRITU    =    ZERO
               PERFORM ORA-INV-PROC
           END-IF.
      *
       QPA7-GET-PROC-EXIT.
           EXIT.
      *
      *
      /***************************************************************
      *    (2.0)   主処理                                            *
      ****************************************************************
       MAIN-PROC                       SECTION.
      *
      *    テーブル判断領域設定
           MOVE    "QPA1"            TO    WK-TBL-NAME.
      *
      *
      *    カーソル宣言を行う
      *
      *    カーソル宣言（小口融資台帳テーブル）
           EXEC SQL DECLARE CUR_QPA1 CURSOR FOR
                 SELECT
                   QPA1_PRMSYAINCD1
                  ,QPA1_PRMSYAINCD2
                  ,QPA1_KYUYOHENSAI
                  ,QPA1_SYOYOHENSAI
                  ,QPA1_GENDOGAKU
                  ,QPA1_KYUYOZANDAKA+QPA1_SYOYOZANDAKA
                  ,DECODE(QPAC_TAISYOKUYMD,NULL,' ',
                              TO_CHAR(QPAC_TAISYOKUYMD,'YYYYMMDD'))
                 FROM   QPA1_KGCDAICYOT,QPAC_SYAINM
                 WHERE  QPA1_PRMSYAINCD1 =  QPAC_PRMSYAINCD1
                   AND  QPA1_PRMSYAINCD2 =  QPAC_PRMSYAINCD2
      *
           END-EXEC.
      *
      *    カーソルＯＰＥＮ
           EXEC SQL OPEN CUR_QPA1 END-EXEC.
      *
      *    データ抽出（テーブルを読み終えるまで繰り返し処理する）
           PERFORM UNTIL SW-OWARI = "1"
               EXEC SQL
                   FETCH CUR_QPA1
                   INTO
                      :QPA-PRMSYAINCD1
                     ,:QPA-PRMSYAINCD2
                     ,:QPA-KYUYOHENSAI
                     ,:QPA-SYOYOHENSAI
                     ,:QPA-GENDOGAKU
                     ,:QPA-ZANDAKA
                     ,:QPA-TAISYOKUBI
      *
               END-EXEC
               IF  ( SQLCODE NOT = ZERO )
                   MOVE  "1"          TO   SW-OWARI
      *
               ELSE
      *            処理対象入力データのカウント
                   ADD  1   TO  CNT-INREC
      *
      *            小口融資貸付データ取得処理
                   PERFORM QPA6-GET-PROC
      *
      *            小口融資入金データ取得処理
                   PERFORM QPA5-GET-PROC
      *
      *            小口融資賞与控除データ取得処理
                   PERFORM QPA4-GET-PROC
      *
      *            テーブル判断をもとに戻す
                   MOVE    "QPA1"        TO    WK-TBL-NAME
      *
      *            残高の計算
                   COMPUTE  WK-ZANDAKA = QPA-ZANDAKA + QPA6-KINGAKU
                   COMPUTE  WK-ZANDAKA = WK-ZANDAKA  - QPA5-KINGAKU
                   COMPUTE  WK-ZANDAKA = WK-ZANDAKA  - QPA4-KOJOGAKU
      *
      *
      *        残高がゼロ以外の場合　　または
      *        残高がゼロかつ退職日が空白または退職日を迎えていない場合
      *        残高更新データファイルにデータを書き込む
      *            IF  WK-ZANDAKA NOT = 0
      *                抽出データ編集処理
      *                PERFORM DATA-EDIT-PROC
      *                抽出データ出力処理
      *                PERFORM DATA-WRITE
      *                IF      SW-ABEND   NOT =   "0"
      *                        GO  TO              INV-QPA
      *                END-IF
      *            ELSE
      *                IF    QPA-TAISYOKUBI = SPACE
      *                  OR  QPA-TAISYOKUBI >= QPA7-SYORIBI
      *                    抽出データ編集処理
      *                    PERFORM DATA-EDIT-PROC
      *                    抽出データ出力処理
      *                    PERFORM DATA-WRITE
      *                    IF      SW-ABEND   NOT =   "0"
      *                            GO  TO              INV-QPA
      *                    END-IF
      *                END-IF
      *            END-IF
      *
      *
      *        残高更新データファイルにデータを書き込む
      *            抽出データ編集処理
                   PERFORM DATA-EDIT-PROC
      *            抽出データ出力処理
                   PERFORM DATA-WRITE
                   IF      SW-ABEND   NOT =   "0"
                           GO  TO              INV-QPA
                   END-IF
                END-IF
      *
      *
           END-PERFORM.
      *
      *    カーソルＣＬＯＳＥ
           EXEC SQL CLOSE CUR_QPA1 END-EXEC.
      *
      *    正常時はこのセクションを終了する
           GO  TO                      MAIN-PROC-EXIT.
      *
      *    ファイル出力エラー時の処理脱け
       INV-QPA.
      *
           EXEC SQL CLOSE CUR_QPA1 END-EXEC.
      *
       MAIN-PROC-EXIT.
           EXIT.
      *
      *
      /***************************************************************
      *    (2.1)   小口融資貸付データ取得処理                        *
      ****************************************************************
       QPA6-GET-PROC                  SECTION.
      *
      *    テーブル判断領域設定
           MOVE    "QPA6"            TO    WK-TBL-NAME.
      *
      *    キー項目設定
           MOVE    QPA-PRMSYAINCD2   TO    QPA6-SYAINCD.
           MOVE    WK-CKISANBI       TO    QPA6-TORIHIKIYMD.
           MOVE    ZERO              TO    QPA6-KINGAKU.
      *
      *    小口融資貸付ＴＢＬより該当キーの貸付データを集計する
           EXEC SQL
             SELECT DECODE(SUM(QPA6_KINGAKU),NULL,0,SUM(QPA6_KINGAKU))
               INTO :QPA6-KINGAKU
               FROM QPA6_KGCKASITUKET
             WHERE QPA6_SYAINCD      =   :QPA6-SYAINCD
               AND QPA6_TORIHIKIYMD  >=  :QPA6-TORIHIKIYMD
               AND (QPA6_TORIKESHIFLG = ' '
                    OR QPA6_TORIKESHIFLG IS NULL)
             GROUP BY QPA6_SYAINCD
           END-EXEC.
      *
      *    IF  ( SQLCODE NOT = ZERO )
      *        PERFORM ORA-ERR-PROC
      *    END-IF.
      *
       QPA6-GET-PROC-EXIT.
           EXIT.
      *
      *
      /***************************************************************
      *    (2.2)   小口融資入金データ取得処理                        *
      ****************************************************************
       QPA5-GET-PROC                  SECTION.
      *
      *    テーブル判断領域設定
           MOVE    "QPA5"            TO    WK-TBL-NAME.
      *
      *    キー項目設定
           MOVE    QPA-PRMSYAINCD1   TO    QPA5-SYAINCD1.
           MOVE    QPA-PRMSYAINCD2   TO    QPA5-SYAINCD2.
           MOVE    WK-NKISANBI       TO    QPA5-NYUKINYMD.
           MOVE    ZERO              TO    QPA5-KINGAKU.
      *
      *    小口融資入金ＴＢＬより該当キーの入金データを集計する
           EXEC SQL
                SELECT DECODE(SUM(QPA5_NYUKINGAKU)
                               ,NULL,0,SUM(QPA5_NYUKINGAKU))
                INTO  :QPA5-KINGAKU
                  FROM QPA5_KGCNYUKINT
                WHERE  QPA5_SYAINCD1      =   :QPA5-SYAINCD1
                  AND  QPA5_SYAINCD2      =   :QPA5-SYAINCD2
                  AND  QPA5_NYUKINYMD    >=   :QPA5-NYUKINYMD
                GROUP  BY QPA5_SYAINCD1,QPA5_SYAINCD2
           END-EXEC.
      *
      *    IF  ( SQLCODE NOT = ZERO )
      *        PERFORM ORA-ERR-PROC
      *    END-IF.
      *
       QPA5-GET-PROC-EXIT.
           EXIT.
      *
      *
      /***************************************************************
      *    (2.3)   小口融資賞与控除履歴データ取得処理                *
      ****************************************************************
       QPA4-GET-PROC                  SECTION.
      *
      *    テーブル判断領域設定
           MOVE    "QPA4"            TO    WK-TBL-NAME.
      *
      *    キー項目設定
           MOVE    QPA-PRMSYAINCD1   TO    QPA4-SYAINCD1.
           MOVE    QPA-PRMSYAINCD2   TO    QPA4-SYAINCD2.
           MOVE    WK-CKISANBI       TO    QPA4-KOJOYMD.
           MOVE    QSA5-SYORIBI      TO    QPA4-KOJOYMD2.
           MOVE    ZERO              TO    QPA4-KOJOGAKU.
      *
      *    カーソル宣言を行う　　　　　　　　　　　　　　　　　　#
           EXEC SQL DECLARE CUR_QPA4 CURSOR FOR
      *
                SELECT QPA4_KOJOGAKU
                  FROM QPA4_KGCKOJOT
                 WHERE QPA4_SYAINCD1      =   :QPA4-SYAINCD1
                   AND QPA4_SYAINCD2      =   :QPA4-SYAINCD2
                   AND TO_CHAR(QPA4_KOJOYMD,'YYYYMMDD')
                                         >=    :QPA4-KOJOYMD
                   AND TO_CHAR(QPA4_KOJOYMD,'YYYYMMDD')
                                         <=   :QPA4-KOJOYMD2
      *
           END-EXEC.
      *
      *    カーソルＯＰＥＮ
           EXEC SQL OPEN CUR_QPA4 END-EXEC.
      *
      *    １件のみフェッチ
           EXEC SQL
               FETCH CUR_QPA4
                INTO :QPA4-KOJOGAKU
           END-EXEC.
      *
      *    IF  ( SQLCODE NOT = ZERO )
      *         MOVE    ZERO              TO    QPA4-KOJOGAKU
      *         PERFORM ORA-ERR-PROC
      *    END-IF.
      *
      *    カーソルＣＬＯＳＥ
           EXEC SQL CLOSE CUR_QPA4 END-EXEC.
      *
      *
       QPA4-GET-PROC-EXIT.
           EXIT.
      *
      *
      /***************************************************************
      *    (2.4)   出力データ編集処理                                *
      ****************************************************************
       DATA-EDIT-PROC                 SECTION.
      *
      *    社員コード１
           MOVE    QPA-PRMSYAINCD1   TO    OT-SYAINCD1.
      *    社員コード２
           MOVE    QPA-PRMSYAINCD2   TO    OT-SYAINCD2.
      *    利率
           MOVE    WK-RIRITU-G       TO    OT-RIRITU.
      *    残高サイン
           IF    WK-ZANDAKA    <    0
               MOVE    "-"           TO    OT-ZANDAKA-S
           ELSE
               MOVE    "+"           TO    OT-ZANDAKA-S
           END-IF.
      *    残高
           MOVE    WK-ZANDAKA        TO    OT-ZANDAKA.
      *    給与返済額
           MOVE    QPA-KYUYOHENSAI   TO    OT-MAITUKIHENSAI-G.
      *    賞与返済額
           MOVE    QPA-SYOYOHENSAI   TO    OT-SYOYOHENSAI-G.
      *    限度額
           MOVE    QPA-GENDOGAKU     TO    OT-GENDOGAKU-G.
      *    余白エリア
           MOVE    SPACE             TO    OT-FILLER.
      *    改行コード
           MOVE    X"0A"             TO    CR.
      *
       DATA-EDIT-PROC-EXIT.
           EXIT.
      *
      *
      /***************************************************************
      *    (2.2)   抽出データ出力                                    *
      ****************************************************************
       DATA-WRITE                      SECTION.
      *
      *    抽出データを出力ファイルに書込む
           WRITE   OT-REC.
      *
      *    書込みエラー判定
           IF     STATUS-OT-FILE      NOT =   ZERO
                   MOVE    STATUS-OT-FILE      TO      ERR2-STATUS
                   MOVE    "E"         TO      LINK-CONS-MSGKBN
                   MOVE    DSP-ERR2    TO      LINK-CONS-MSG
      *         コンソールログ出力処理
                   PERFORM CONS-PROC
                   MOVE    "1"         TO      SW-ABEND
                   GO TO   DATA-WRITE-EXIT
           END-IF.
      *
      *    出力件数のカウント
           ADD     1                   TO      CNT-OTREC.
      *
       DATA-WRITE-EXIT.
           EXIT.
      *
      *
      /***************************************************************
      *    (3.0)   終了処理                                          *
      ****************************************************************
       FINAL-PROC                      SECTION.
      *
      *    ファイルＣＬＯＳＥ
           CLOSE   OT-FILE.
      *
      *    処理件数メッセージ出力
           MOVE    SPACE               TO      LINK-CONS-MSG.
           MOVE    CNT-INREC           TO      MSG3-CNT1.
           MOVE    CNT-INREC           TO      MSG3-CNT2.
           MOVE    CNT-OTREC           TO      MSG3-CNT3.
           MOVE    "I"                 TO      LINK-CONS-MSGKBN.
           MOVE    DSP-MSG3            TO      LINK-CONS-MSG.
      *    コンソールログ出力処理
           PERFORM CONS-PROC.
      *
      *    処理終了メッセージ出力
           ACCEPT  WK-TIME             FROM    TIME.
           MOVE    WK-TIME-HH          TO      WK-ED-TIME-HH.
           MOVE    WK-TIME-MM          TO      WK-ED-TIME-MM.
           MOVE    WK-TIME-SS          TO      WK-ED-TIME-SS.
           MOVE    WK-ED-TIME          TO      MSG2-TIME.
           MOVE    "I"                 TO      LINK-CONS-MSGKBN.
           MOVE    DSP-MSG2            TO      LINK-CONS-MSG.
      *    コンソールログ出力処理
           PERFORM CONS-PROC.
      *
      *    処理終了時のプログラムステータスの設定
           IF      SW-ABEND            =       "0"
                   MOVE    000         TO      PROGRAM-STATUS
           ELSE
                   MOVE    099         TO      PROGRAM-STATUS
           END-IF.
      *
       FINAL-PROC-EXIT.
           EXIT.
      *
      *
      /***************************************************************
      *    (C.0)   コンソールログ出力処理
      ****************************************************************
       CONS-PROC                       SECTION.
      *
      *    コンソールログ出力サブルーチン
      *
           CALL    "QTAB-CONSLOG"      USING   LINK-CONS-AREA.
           IF      LINK-CONS-STATUS    =       ZERO
      *
                   EXEC SQL COMMIT WORK END-EXEC
                   MOVE    000         TO      PROGRAM-STATUS
           ELSE
                   MOVE    099         TO      PROGRAM-STATUS
                   EXIT    PROGRAM
           END-IF.
      *
       CONS-PROC-EXIT.
           EXIT.
      *
      *
      /***************************************************************
      *    (C.1)     取得データ無し処理                              *
      ****************************************************************
       ORA-INV-PROC                 SECTION.
      *
           MOVE    "1"                 TO      SW-ABEND.
      *
           MOVE    "E"                 TO      LINK-CONS-MSGKBN.
      *
      *    テーブルの判断（メッセージ内容が異なるため）
           IF  WK-TBL-NAME    =  "QSA5"
                    MOVE    "QSA5_DATECTRLT  GET DATA ERROR"
                                             TO    LINK-CONS-MSG
           ELSE
               IF  WK-TBL-NAME    =  "QPA7"
                        MOVE    "QPA7_KGCRIRITUT GET DATA ERROR"
                                             TO    LINK-CONS-MSG
               ELSE
                        MOVE    "QPA1_KGCDAICYOT COUNT ERROR   "
                                             TO    LINK-CONS-MSG
               END-IF
           END-IF.
      *    コンソールログ出力処理
           PERFORM CONS-PROC.
      *
           MOVE    099                 TO      PROGRAM-STATUS.
           EXIT    PROGRAM.
      *
       ORA-INV-PROC-EXIT.
           EXIT.
      *
      *
      /***************************************************************
      *    (C.2)   ORACLE ERR
      ****************************************************************
       ORA-ERR-PROC                  SECTION.
           MOVE    "E"                 TO      LINK-CONS-MSGKBN.
           IF  ( SQLCODE = ZERO )
               MOVE    SPACE           TO      LINK-CONS-MSG
               MOVE    "SQLSTATE="     TO      LINK-CONS-MSG(1:9)
               MOVE    SQLSTATE        TO      LINK-CONS-MSG(10:5)
           ELSE
               MOVE    SQLERRML        TO      WK-SQLERRML
               MOVE    WK-SQLERRML     TO      WK-SQLERRML-X
               STRING  WK-SQLERRML-X " " SQLERRMC
                       DELIMITED  BY  "*"  INTO    LINK-CONS-MSG
           END-IF.
      *    コンソールログ出力処理
           PERFORM CONS-PROC.
      *
           MOVE    099                 TO      PROGRAM-STATUS.
           EXIT    PROGRAM.
       ORA-ERR-PROC-EXIT.
           EXIT.
